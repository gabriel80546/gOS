	ea 19 7d 00 00 /pular funcoes/


/~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/
/~~~~~~~~~~~~~~~~~~~~~~~Funções~~~~~~~~~~~~~~~~~~~~~~~~/
/~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/



	/print_hex = 7c05h/
	/printa o valor hexadecimal de ax/

	60		/pusha/
	b9 0c 00	/mov cx,000Ch/
	8B D8		/mov bx,ax/
	BE 0F 00	/mov si,000Fh/
	D3 E6		/shl si,cl/
	23 DE		/and bx,si/

	BE 09 00	/mov si,9h/
	D3 E6
	3B DE
	76 02
	EB 1C
	D3 EB
	81 C3 30 00
	22 D0
	8B C3
	B4 0E
	CD 10
	8B C2
	E3 02
	EB 02
	61
	Cb	/c3 ou cb dep. do call/

	81 E9 04 00
	EB D0
	D3 EB
	81 C3 37 00
	8B D0
	8B C3
	B4 0E
	CD 10
	8B C2
	E3 02
	EB 02
	61
	Cb	/c3 ou cb dep. do call/
	81 E9 04 00
	EB B4

	/print_string = 7c55h/
	/printa a string apontada por ax/

	60

	b9 ff ff	/mov	cx,ffffh/

	41		/inc	cx/
	8b d8		/mov	bx,ax/
	03 d9		/add	bx,cx/
	8a 1f		/mov	bl,[bx]/
	80 fb 00	/cmp	bl,00/
	74 0c		/jz	sair/


        8b d0           /mov    dx,ax/
	8b c3		/mov	ax,bx/
	b4 0e		/mov	ah,0e/
	cd 10		/int	10h/
	8b c2		/mov	ax,dx/
	eb e8		/jmp	inc cx/

	61
	cb	/c3 ou cb dep. do call/


	/debug_print = 7c73h/


	60

	9a 05 7c 00 00

	b8 20 0e
	cd 10

	61
	cb


	/debug = 7c80h/
	/printa o valor de todos os registradores/
	/pausa a execucao ate a tecla enter ser precionada/
	/mostra que linha de codigo esta(opcional)/

	60
	9c

	eb 05
	0d 0a 00
	00 00

	60
	8b 06 87 7c
	9a 05 7c 00 00

	b8 20 0e
	cd 10
	61

	9a 73 7c 00 00	/AX/

	8b c3		/BX/
	9a 73 7c 00 00

	8b c1		/CX/
	9a 73 7c 00 00

	8b c2		/DX/
	9a 73 7c 00 00

	8b c4		/SP/
	9a 73 7c 00 00

	8b c5		/BP/
	9a 73 7c 00 00
8b c6		/SI/
	9a 73 7c 00 00

	8b c7		/DI/
	9a 73 7c 00 00


	b8 84 7c
	9a 55 7c 00 00	/Pula Linha/


	e5 60
	3d 1c 1c
	75 f9


	e5 60
	3d 9c 9c
	75 f9

	9d
	61
	cb


/disk_load = 7cf9h/
	/variaveis/
	/Mensagem De Erro = 7ce8h/
	/"Disk read error!"/
	44 69 73 6B 20 72 65 61 64 20 65 72 72 6F 72 21 00

	/codigo/
	52

	b4 02

	8a c6

	b5 00

	b6 00

	b1 02


	cd 13

	/7d04h/
	72 06

	5a

	3a c6

	/7d09h/
	75 01

	cb


	/disk_error = 7d0ch/
	b8 e8 7c

	9a 55 7c 00 00

	eb fe





/~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/
/~~~~~~~~~~~~~~~~~~~~~~Variaveis~~~~~~~~~~~~~~~~~~~~~~~/
/~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/

	/BOOT_DRIVE = 7d18h/
	00

/~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/
/~~~~~~~~~~~~~~~~~~~~~~~~MAIN~~~~~~~~~~~~~~~~~~~~~~~~~~/
/~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/




	88 16 18 7d	/mov [BOOT_DRIVE],dl/

	/8a 06 18 7d/	/mov al,[BOOT_DRIVE]/	/testar a instrucao acima/


	bd 00 80	/mov bp,8000h/
	8b e5		/mov sp,bp/


/**********_BOCHS_************/

	bb 00 90	/mov bx,9000h/
	b6 05		/mov dh,5h/		/dh = quantidade de setores lidos/

	8a 16 18 7d	/mov dl,[BOOT_DRIVE]/

	9a f9 7c 00 00	/call disk_load/


	/*************Teste do livro************/

	/8b 06 00 90/		/mov ax, [9000h]/
	/9a 05 7c 00 00/	/call disk_load/



	/8b 06 00 91/		/mov ax, [9100h]/
	/9a 05 7c 00 00/	/call disk_load/

	/*************Teste do livro************/


	/vai pra outro setor/
	ea 1e 92 00 00



	eb fe







/~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/
/~~~~~~~~~~~~~~~~~~~~preenchimento~~~~~~~~~~~~~~~~~~~~~/
/~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/



/	00 01 02 03 04 05 06 07     08 09 0a 0b 0c 0d 0e 0f/
/c0/	                        /~/                        
/d0/	                        /~/                        
/e0/	                        /~/                        
/f0/	                        /~/                        
/100/	                        /~/                        
/110/	                        /~/                        
/120/	                        /~/                        
/130/	                     00 /~/ 00 00 00 00 00 00 00 00
/140/	00 00 00 00 00 00 00 00 /~/ 00 00 00 00 00 00 00 00
/150/	00 00 00 00 00 00 00 00 /~/ 00 00 00 00 00 00 00 00
/160/	00 00 00 00 00 00 00 00 /~/ 00 00 00 00 00 00 00 00
/170/	00 00 00 00 00 00 00 00 /~/ 00 00 00 00 00 00 00 00
/180/	00 00 00 00 00 00 00 00 /~/ 00 00 00 00 00 00 00 00
/190/	00 00 00 00 00 00 00 00 /~/ 00 00 00 00 00 00 00 00
/1a0/	00 00 00 00 00 00 00 00 /~/ 00 00 00 00 00 00 00 00
/1b0/	00 00 00 00 00 00 00 00 /~/ 00 00 00 00 00 00 00 00
/1c0/	00 00 00 00 00 00 00 00 /~/ 00 00 00 00 00 00 00 00
/1d0/	00 00 00 00 00 00 00 00 /~/ 00 00 00 00 00 00 00 00
/1e0/	00 00 00 00 00 00 00 00 /~/ 00 00 00 00 00 00 00 00
/1f0/	00 00 00 00 00 00 00 00 /~/ 00 00 00 00 00 00 55 aa

/~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/
/~~~~~~~~~~~~~~~~~~~~~~~~Setor1~~~~~~~~~~~~~~~~~~~~~~~~/
/~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/



/	00 01 02 03 04 05 06 07     08 09 0a 0b 0c 0d 0e 0f/
/00/	da da da da da da da da /~/ da da da da da da da da
/10/	da da da da da da da da /~/ da da da da da da da da
/20/	da da da da da da da da /~/ da da da da da da da da
/30/	da da da da da da da da /~/ da da da da da da da da
/40/	da da da da da da da da /~/ da da da da da da da da
/50/	da da da da da da da da /~/ da da da da da da da da
/60/	da da da da da da da da /~/ da da da da da da da da
/70/	da da da da da da da da /~/ da da da da da da da da
/80/	da da da da da da da da /~/ da da da da da da da da
/90/	da da da da da da da da /~/ da da da da da da da da
/a0/	da da da da da da da da /~/ da da da da da da da da
/b0/	da da da da da da da da /~/ da da da da da da da da
/c0/	da da da da da da da da /~/ da da da da da da da da
/d0/	da da da da da da da da /~/ da da da da da da da da
/e0/	da da da da da da da da /~/ da da da da da da da da
/f0/	da da da da da da da da /~/ da da da da da da da da

/100/	fa ce fa ce fa ce fa ce /~/ fa ce fa ce fa ce fa ce
/110/	fa ce fa ce fa ce fa ce /~/ fa ce fa ce fa ce fa ce
/120/	fa ce fa ce fa ce fa ce /~/ fa ce fa ce fa ce fa ce
/130/	fa ce fa ce fa ce fa ce /~/ fa ce fa ce fa ce fa ce
/140/	fa ce fa ce fa ce fa ce /~/ fa ce fa ce fa ce fa ce
/150/	fa ce fa ce fa ce fa ce /~/ fa ce fa ce fa ce fa ce
/160/	fa ce fa ce fa ce fa ce /~/ fa ce fa ce fa ce fa ce
/170/	fa ce fa ce fa ce fa ce /~/ fa ce fa ce fa ce fa ce
/180/	fa ce fa ce fa ce fa ce /~/ fa ce fa ce fa ce fa ce
/190/	fa ce fa ce fa ce fa ce /~/ fa ce fa ce fa ce fa ce
/1a0/	fa ce fa ce fa ce fa ce /~/ fa ce fa ce fa ce fa ce
/1b0/	fa ce fa ce fa ce fa ce /~/ fa ce fa ce fa ce fa ce
/1c0/	fa ce fa ce fa ce fa ce /~/ fa ce fa ce fa ce fa ce
/1d0/	fa ce fa ce fa ce fa ce /~/ fa ce fa ce fa ce fa ce
/1e0/	fa ce fa ce fa ce fa ce /~/ fa ce fa ce fa ce fa ce
/1f0/	fa ce fa ce fa ce fa ce /~/ fa ce fa ce fa ce fa ce




/setor2 = 9200h/




/
;	ax	cx	dx	bx
;	es	cs	ss	ds
;	c0	c8	d0	d8
/

	/8c = ax <- seg/
	/8e = ax -> seg/




	/**********************Tentando usar os segmentos**********************/

	/b8 00 b0	c7 06 87 7c 01 00	9a 80 7c 00 00/		/mov ax, b000h/
	/8c d0		c7 06 87 7c 03 00	9a 80 7c 00 00/		/mov ax, ds/
	/8e d0		c7 06 87 7c 02 00	9a 80 7c 00 00/		/mov ds, ax/
	/8c d0		c7 06 87 7c 03 00	9a 80 7c 00 00/		/mov ax, ds/
	/b0 61		c7 06 87 7c 04 00	9a 80 7c 00 00/		/mov al, '?'/
	/c6 06 00 80 61	c7 06 87 7c 05 00	9a 80 7c 00 00/		/mov [8000h],al/

	/**********************Tentando usar os segmentos**********************/



	/32bits/

	/67 c7 05   00 80 0b 00  61 70	c7 06 87 7c 00 00	9a 80 7c 00 00/		/mov [8000h],al/
	/67 c7 05   a0 80 0b 00  61 71	c7 06 87 7c 01 00	9a 80 7c 00 00/		/mov [8000h],al/
	/67 c7 05   40 81 0b 00  61 72	c7 06 87 7c 02 00	9a 80 7c 00 00/		/mov [8000h],al/
	/67 c7 05   e0 81 0b 00  61 73	c7 06 87 7c 03 00	9a 80 7c 00 00/		/mov [8000h],al/
	/67 c7 05   80 82 0b 00  61 74	c7 06 87 7c 04 00	9a 80 7c 00 00/		/mov [8000h],al/
	/67 c7 05   20 83 0b 00  61 75	c7 06 87 7c 05 00	9a 80 7c 00 00/		/mov [8000h],al/
	/67 c7 05   c0 83 0b 00  61 76	c7 06 87 7c 06 00	9a 80 7c 00 00/		/mov [8000h],al/
	/67 c7 05   60 84 0b 00  61 77	c7 06 87 7c 07 00	9a 80 7c 00 00/		/mov [8000h],al/

	/32bits/



	/Bootado = 9200h/


	/printVGA_string = 9200h/
	/*(file + 400)/
	/printa a string apontada por ax/
	9c
	60


	/******************inicializacoes**********************/

	66 ba 00 80 0b 00	/mov edx, b8000h/ /b8000h = VGA/
	b7 /409/0f			/mov bh, 0fh/
	8b f0			/mov si,ax/

	/******************inicializacoes**********************/

	/inicio 40c/
	8a 1c		/mov bl,[si]/


	80 fb 00	/cmp bl,0/

	74 08		/jz saida/ /413/

	67 89 1a	/mov [edx], ebx/


	42 42		/inc dx/ /inc dx/ 

	/67 89 1a/	/mov [edx], ebx/

	46		/inc si/ 
	eb f1		/jmp inicio/

	/saida = 41bh/



	61
	9d
	cb

	




	/***************************************************/
	/***********************GDT*************************/
	/***************************************************/

	/*(file + 41eh)/


	eb 1e


	/GDT = *(file + 420h) = 9220/






	/gdt_null/
	00 00 00 00 /the mandatory null descriptor/
	00 00 00 00


	/gdt_code/
	ff ff		/Limit (bits 0-15)/
	00 00		/Base (bits 0-15)/
	00		/Base (bits 16-23)/
	9A		/10011010 1st flags, type flags/
	CF		/11001111 2nd flags, Limit (bits 16-19)/
	00		/Base (bits 24-31)/






	/gdt_data = *(file + 430h)/
	ff ff		/Limit (bits 0-15)/
	00 00		/Base (bits 0-15)/
	00		/Base (bits 16-23)/
	92		/10011010 1st flags, type flags/
	CF		/11001111 2nd flags, Limit (bits 16-19)/
	00		/Base (bits 24-31)/


	/gdt_end/




	/GDT descriptor = *(file + 438h) = 9238h/
	17 00		/17 = 23 , 24 é o numero de bytes do GDT/
	20 92 00 00	/endereço do inicio do GDT/

	/43E/
	/GDT = *(file + 43Eh) = 923Eh/


	/MUDANDO PARA MODO PROTEGIDO/



	bd 00 90	/mov bp,9000h/
	8b e5 		/mov sp,bp/




	FA		/cli/
	0f 01 16 38 92	/lgdt [GDT descriptor]/
	0f 20 C0	/mov eax,CR0/
	66 83 C8 01	/or eax,0x1/
	0f 22 c0	/mov CR0,eax/

	ea 58 92 08 00 /pular funcoes/


	/47fh/
	/aqui ja esta em 32 bits/



	ba 6c 92 00 00

	66 b8 10 00	/mov ax,[gdt_data]/
	8e d8
	8e c0
	8e e0
	8e e8

	/464 = 9264/

	/468 = 9268/

	/469/



	8e d0





	bd 00 00 09 00	/mov ebp,0x90000/
	89 ec		/mov esp,ebp/




	/******************************************************/
	/**********************FUNCOES32***********************/
	/******************************************************/


	/9272/

	ea b7 97 00 00  08 00	/jmp 0008:00009372/


	/funcoes/



	/********************************************/
	/********** printa_no_topo 47Ah *************/
	/********************************************/
	/usando a string apontada por EAX/

	60	/pushad/


	ba	00 80 0b 00	/mov edx,b8000h/ /em edx estara o endereco do VGA modo de texto/

	/volta:/
	8b 08			/mov ecx,[eax]/	/armazena em ecx 2 caracteres e 2 cores/

	81 e1	ff 00 00 00	/and ecx,ffh/	/fica apenas com o primeiro caracter e joga fora os outros 3 bytes/


	e3 0f			/jecxz	fim/	/se o caracter eh nulo sai da funcao/

	81 c9	00 3f 00 00	/or ecx,0f00h/	/adiciona a cor 0fh = "branco com fundo preto" ao caracter/

	66 89 0a		/mov [edx],ecx/	/printa o caracter/
	40			/inc eax/
	83 c2 02		/add edx,02h/




	eb e7			/jmp volta/
	/fim:/


	61	/popad/
	cb	/far ret/



	/********************************************/
	/************* print_VGA 49Ah ***************/
	/********************************************/

	/parametros:	EAX aponta para a string a ser printada/
	/		EBX ou BL atributo/
	/		ESI linha/
	/		EDI coluna/

	9C		/PUSHFD/
	60		/PUSHAD/



	/INICIALIZANDO/
	ba 00 80 0b 00		/mov edx,B8000h/ /Inicio Da regiao do VGA/



	b9 02 00 00 00		/mov ecx,02h/
	0f af f9		/imul edi,ecx/	/Coluna * 2/
						/pq eh necessario pular/
						/os atributos/


	b9 a0 00 00 00		/mov ecx,A0h/
	0f af f1		/imul esi,ecx/ /Linha * 160/


	03 d6			/add edx,esi/ 
	03 d7			/add edx,edi/	/edx aponta para o local correto/


	81 e3 ff 00 00 00	/AND ebx,FFh/ /limpa os outros bytes/


	b9 00 01 00 00		/mov ecx,100h/	/100h = 256/
	0f af d9		/imul ebx,ecx/	/ebx >> 8/

	/volta/
	81 e1 ff 00 00 00	/AND ecx,FFh/ /limpa os outros bytes/
	8a 08			/mov cl,[eax]/
	e3 0c			/jecxz saida/

	8b cb			/mov ecx,ebx/
	8a 08			/mov cl,[eax]/


	66 89 0a		/mov [edx],cx/

	40			/inc eax/
	42			/inc edx/
	42			/inc edx/
	eb ea			/volta/

	/saida/
	61		/POPAD/
	9d		/POPFD/
	cb		/RET/




	/********************************************/
	/*********** LIMPA_VGA = 92DCh **************/
	/********************************************/
	/PARAMETROS: EAX = ATRIBUTO/
	9c	/pushfd/
	60	/pushad/

	eb 02
	/4E0 = 92E0/
	20 00

	8b d8		/mov ebx,eax/




	b8 e0 92 00 00	/mov eax," "/


	bf 00 00 00 00
	be 00 00 00 00

	/4f3/


	9a 9A 92 00 00  08 00	/call printa_VGA/


	47

	81 ff D0 07 00 00	/cmp edi,7D0h/

	75 f0			/je ???????/
	/503/

	61
	9d
	cb








	/********************************************/
	/********* ALTERA_CURSOR = 506h *************/
	/********************************************/
	/EAX = coluna/
	/EBX = linha/

	9c	/pushfd/
	60	/pushad/


	b9 00 00 00 00		/mov ecx,0h/

	03 c8			/add ecx,eax/


	/ecx ja guardou eax/
	/so falta ebx/
	/primeiro vamos multiplicar por 80 = 50h/

	b8 50 00 00 00		/mov eax,50h/

	/o valor de ebx eh o numero da linha/
	/agora iremos multiplicar por 50h/

	0f af d8		/imul ebx,eax/



	03 cb			/add ecx,ebx/



	/pronto ecx = ebx + eax/



	b0 0f			/MOV al,0fh/
	66 ba d4 03		/MOV dx,3d4h/
	EE			/OUT dx,al/




	8b c1			/mov eax,ecx/ /restaurando o valor/


/	b0 41			//MOV al,BYTE_MAIS_BAIXO/

	66 ba d5 03		/MOV dx,3d5h/
	EE			/OUT dx,al/




	b0 0e			/MOV al,0eh/
	66 ba d4 03		/MOV dx,3d4h/
	EE			/OUT dx,al/


	c1 f9 08		/SAR ecx,8h/
	8b c1			/mov eax,ecx/ /restaurando o valor/




/	b0 00			//MOV al,BYTE_MAIS_ALTO/

	66 ba d5 03		/MOV dx,3d5h/
	EE			/OUT dx,al/


	61			/popad/
	9d			/popfd/
	cb			/retf/










	/********************************************/
	/***** Converta_eax_para_String = 53Bh ******/
	/********************************************/
	/retorna: Converte o Valor de EAX
		na String apontada em 53Fh/
	9c
	60


	eb 09
	/RESULTADO 53F/			/'\0'/
	30 30 30 30  30 30 30 30	00


	b9 08 00 00 00		/mov ecx,8h/


	8b d0			/mov edx,eax/

	81 e2 0f 00 00 00	/and edx,fh/
	81 c2 30 00 00 00	/add edx,30h/
	81 fa 39 00 00 00	/cmp edx,39h/
	76 06			/jna DEPOIS_DESSE_ADD/
	81 c2 07 00 00 00	/add edx,30h/


	88 15 /56Bh/46 93 00 00	/mov RESULTADO,dl/


	c1 e8 04		/SHR eax,4/


	fe 0d 6b 93 00 00	/DEC  [936Bh]/


	e2 d3			/LOOP/


	/restaurando a instrucao modificada/
	b0 46			/mov al,46h/
	88 05 6b 93 00 00	/mov [0x936b],al/
	/restaurando a instrucao modificada/

	61
	9d
	cb


	/frase teste = 585h/

	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20
	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23
	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23
	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20

	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20
	23 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20
	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 23
	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20

	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20
	23 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20
	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 23
	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20

	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20
	23 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20
	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 23
	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20

	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20
	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23
	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23
	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20

	00


	/ANTIGO sHELL/
	/DEPRECATED/
	eb fe eb fe eb fe eb fe
	eb fe eb fe eb fe eb fe
	eb fe eb fe eb fe eb fe
	eb fe eb fe eb fe eb fe
	eb fe eb fe eb fe eb fe
	eb fe eb fe eb fe eb fe
	eb fe eb fe eb fe eb fe
	eb fe eb fe eb fe eb fe
	eb fe 90


	/********************************************/
	/************ OBTER TECLA 759h **************/
	/********************************************/
	/Retorna:/
	/[762h] = caracter/
	/EAX = 1 se tudo der certo/
	/EAX = 2 se o mesmo caracter for precionado/
	/EAX = 3 se o caracter nao for printavel/
	/EBX = SCAN CODE/
	9c
	/50/ 51 52 /53/ 54 55 56 57	/push todos menos eax e ebx/
	/ax/	   /bx/


	eb 02
	/762h//caracter/
	00 00
	e9 00 01 00 00		/JMP +100h/
	/769h/
	/	00 01 02 03 04 05 06 07 // 08 09 0a 0b 0c 0d 0e 0f/
	/00/	ff ff 31 32 33 34 35 36 // 37 38 39 30 ff ff ff ff
	/10/	71 77 65 72 74 79 75 69 // 6f 70 ff ff ff ff 61 73
	/20/	64 66 67 68 6a 6b 6c ff // ff ff ff ff 7a 78 63 76
	/30/	62 6e 6d 2c 2e 3b ff ff // ff 20 ff ff ff ff ff ff
	/40/	ff ff ff ff ff ff ff 37 // 38 39 ff 34 35 36 ff 31
	/50/	32 33 30 ff ff ff ff ff // ff ff ff ff ff ff ff ff
	/60/	ff ff ff ff ff ff ff ff // ff ff ff ff ff ff ff ff
	/70/	ff ff ff 2f ff ff ff ff // ff ff ff ff ff ff ff ff
	/80/	ff ff ff ff ff ff ff ff // ff ff ff ff ff ff ff ff
	/90/	ff ff ff ff ff ff ff ff // ff ff ff ff ff ff ff ff
	/a0/	ff ff ff ff ff ff ff ff // ff ff ff ff ff ff ff ff
	/b0/	ff ff ff ff ff ff ff ff // ff ff ff ff ff ff ff ff
	/c0/	ff ff ff ff ff ff ff ff // ff ff ff ff ff ff ff ff
	/d0/	ff ff ff ff ff ff ff ff // ff ff ff ff ff ff ff ff
	/e0/	ff ff ff ff ff ff ff ff // ff ff ff ff ff ff ff ff
	/f0/	ff ff ff ff ff ff ff ff // ff ff ff ff ff ff ff ff

	b8 00 00 00 00		/MOV eax,0/
	e4 60			/IN al,60h/
	8b d8			/MOV ebx,eax/
	b9 69 95 00 00		/MOV ecx, ASCII/
	03 c1			/ADD eax,ecx/
	8a 00			/mov al,[eax]/
	8a 0d 62 95 00 00	/mov cl,[caracter]/

	3a c1			/CMP al,cl/
	75 0d			/JNE Printavel/

	b8 02 00 00 00		/MOV eax,2/
		    /bx/       /ax/
	5f 5e 5d 5c /5b/ 5a 59 /58/	/pop todos menos eax e ebx/
	9d
	cb


	/printavel:/
	80 f8 ff		/CMP al,ffh/
	75 0d			/JNE Tudo_Certo/
	b8 03 00 00 00		/mov eax,3/
		    /bx/       /ax/
	5f 5e 5d 5c /5b/ 5a 59 /58/	/pop todos menos eax e ebx/
	9d
	cb

	88 05 62 95 00 00	/mov [Caracter],al/
	b8 01 00 00 00		/mov eax,1/
		    /bx/       /ax/
	5f 5e 5d 5c /5b/ 5a 59 /58/	/pop todos menos eax e ebx/
	9d
	cb






	/********************************************/
	/**************** SHELL 8B7h ****************/
	/********************************************/
	9c
	60


	eb 10
	/gabriel@OS = 8BBh/
	47 61 62 72 69 65 6C 40 4F 53 20 2f 20 23 20 00


	/***************INICIALIZADORES***************/
	b8 bb 96 00 00		/Gabriel@OS/
	bb 70 00 00 00
	bf 00 00 00 00
	be 08 00 00 00
	9a 9A 92 00 00  08 00	/call print_VGA/


	b8 0f 00 00 00
	bb 08 00 00 00
	9a 06 93 00 00  08 00	/call ALTERA_CURSOR/

	b9 0f 00 00 00		/mov ecx,f/	/ecx = linha/
	ba 08 00 00 00		/mov edx,8/	/edx = coluna/
	/***************INICIALIZADORES***************/


	/901h/

	8b c1			/mov eax,ecx/	/mov eax,linha/
	8b da			/mov ebx,edx/	/mov ebx,coluna/
	9a 06 93 00 00  08 00	/call ALTERA_CURSOR/




	9a 59 95 00 00 08 00	/call OBTER TECLA/
	81 fb 1c 00 00 00	/PRECIONA ENTER/
	75 07
	9a 71 97 00 00  08 00	/call Execut/
	/**************** Execut 971h ***************/
/	9a 4A 97 00 00  08 00/	/call print_eax/


	81 f8 01 00 00 00	/CMP eax,1/
	75 db			/Volta OBTER TECLA/


	b8 62 95 00 00		/caracter/
	bb 70 00 00 00

	8b f9			/mov edi,ecx/	/mov edi,linha/
	8b f2			/mov esi,edx/	/mov esi,coluna/

	9a 9A 92 00 00  08 00	/call print_VGA/

	41

	/971h/
	ea 01 97 00 00	08 00


	61
	9d
	cb



	/********************************************/
	/**************** PRINT_EAX 94Ah ************/
	/********************************************/
	9c
	60

	9a 3b 93 00 00  08 00

	b8 3f 93 00 00	/eax = string/
	bb 70 00 00 00	/atributo/
	be 00 00 00 00	/esi = 0/
	bf 00 00 00 00	/edi = 0/
	9a 9A 92 00 00  08 00	/call print_VGA/

	61
	9d
	cb



	/********************************************/
	/**************** Execut 971h ***************/
	/********************************************/
	9c
	50

	8b c6
	9a 4a 97 00 00  08 00
	/**************** PRINT_EAX 94Ah ************/
	46
	bf 00 00 00 00

	b8 bb 96 00 00		/Gabriel@OS/
	bb 70 00 00 00

	9a 9A 92 00 00  08 00	/call print_VGA/


	b8 0f 00 00 00
	9a 06 93 00 00  08 00	/call ALTERA_CURSOR/


	58
	9d
	cb



/	00 01 02 03 04 05 06 07     08 09 0a 0b 0c 0d 0e 0f/

/00/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/10/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/20/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/30/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/40/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/50/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/60/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/70/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/80/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/90/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/a0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/b0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/c0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/d0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/e0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/f0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90


	/******************************************************/
	/*************************KERNEL***********************/
	/******************************************************/


	eb 10
	/gabriel@OS = 9d0h/
	47 61 62 72 69 65 6C 40 4F 53 20 2f 20 23 20 00

	eb 1b
	/A4F/
	53 65 6a 61 20 62 65 6d 20 76 69 6e 64 6f 20
	61 6f 20 53 65 6d 20 4e 6f 6d 65 00



	/CINZA/
	b8 70 00 00 00		/mov eax,atributo/
	9a DC 92 00 00  08 00	/call LIMPA_VGA/



	b8 85 93 00 00		/Apresentacao ENVOLTA/
	bb 71 00 00 00
	bf 00 00 00 00
	be 02 00 00 00
	9a 9A 92 00 00  08 00	/call print_VGA/

	b8 4f 98 00 00		/Apresentacao Conteudo/
	bb 74 00 00 00
	bf 1b 00 00 00
	be 04 00 00 00
	9a 9A 92 00 00  08 00	/call print_VGA/


	/SHELL 8B7h/
	9a b7 96 00 00  08 00	/call SHELL/

	eb fe





/	00 01 02 03 04 05 06 07     08 09 0a 0b 0c 0d 0e 0f/

/00/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/10/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/20/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/30/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/40/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/50/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/60/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/70/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/80/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/90/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/A0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/B0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/C0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/D0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/E0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/F0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
