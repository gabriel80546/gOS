	/******************************************************/
	/******************* FUNCOES 32-bits ******************/
	/******************************************************/

	/CALL KERNEL 0/
	bb 00 00 00 00
	9a 7b a2 00 00  08 00

	/funcoes/

	/*********************************/
	/**** findAdress de uma linha ****/
	/*********************************/
	e8 00 00 00 00
	58
	81 c0 07 00 00 00
	/**** findAdress de uma linha ****/
	e8 00 00 00 00 58 81 c0 07 00 00 00



	/********************************************/
	/******* redirecionadorDeFuncoes 496h *******/
	/****** redirecionadorDeFuncoes* 9296h ******/
	/********************************************/
	/parametros:	EBX = ID da funcao/
	/descricao:	executa a funcao com o nome dado/
	/retorna:	os mesmos valores/
	/		que a funcao retorna/
	/PUSHFD/
	9C
	/PUSHAD/
	60

	/**** findAdress de uma linha ****/
	e8 00 00 00 00 58 81 c0 09 00 00 00
	/JMP KEY/
	eb 10
	/KEY/
	1f 69 5b bf b7 98 f0 5a fa 39 bb b9 d8 07 7a 14
	/STACK+1 = *KEY/
	/PUSH EAX/
	50


	/**** findAdress de uma linha ****/
	e8 00 00 00 00 58 81 c0 09 00 00 00
	/JMP KEY/
	eb 10
	/KEYFINAL/
	4c 9c f8 39 6d f1 a2 c1 17 b6 69 0a e0 ce aa e3
	/STACK+2 = *KEYFINAL/
	/PUSH EAX/
	50

	/**** findAdress de uma linha ****/
	e8 00 00 00 00 58 81 c0 07 00 00 00
	/cursor = valor aleatorio/


/*TODO* BUSCA/
/INICIO/
	/EAX <- Qualquer Coisa/
	/ECX = P/
	/EDX = CURSOR/
	/EBX = ID/
	/ESP <- STACK/ /ESP* = KEYFINAL, (ESP* + 4) = KEY/
	/ESI = @@/
	/EDI = @/
	/DISPONIVEIS: EBP/

	/MOV EDX, EAX/
	8b d0
	/MOV ECX,0/
	b9 00 00 00 00

	/**** findAdress de uma linha ****/
	e8 00 00 00 00 58 81 c0 09 00 00 00
	/MOV ESI, EAX/
	8b f0
	/ESI = @@/


	81 f9 10 00 00 00
	75 24
	4a
	8b c4
	48 48 48 48
	8b 00
	ff e0

	/NOP .../
	90 90 90 90 90 90 90 90
	90 90 90 90 90 90 90 90
	90 90 90 90 90 90 90 90
	90 90 90 90 90 90 90 90
	90 90 90 90 90 90 90 90

	/MOV ECX, 0/
	b9 00 00 00 00

	/**** findAdress de uma linha ****/
	e8 00 00 00 00 58 81 c0 09 00 00 00
	/EDI = @/
	/MOV EDI, EAX/
	8b f8
	/CMP [EDX], [KEY + ECX]/
	/MOV EAX, (ESP + 4)/
		8b c4
		40 40 40 40
		/MOV EAX, [EAX]/
		8b 00
		/ADD EAX, ECX/
		03 c1
		/MOV EAX, [EAX]/
		8b 00
		/CMP [EDX], AL/
		3a 02
		/JE +24/
		74 24
		/INC EDX/
		42
		/JMP ESI/
		/JMP @@/
		ff e6
		/NOP .../
		90 90 90 90 90 90 90 90
		90 90 90 90 90 90 90 90
		90 90 90 90 90 90 90 90
		90 90 90 90 90 90 90 90
		90 90 90 90 90 90 90 90

		/CMP ECX, 10h/
		81 f9 10 00 00 00
		/JL +24h/
		7c 24
		/INC EDX/
		42
		/JMP ESI/
		/JMP @@/
		ff e6
		/NOP .../
		90 90 90 90 90 90 90 90
		90 90 90 90 90 90 90 90
		90 90 90 90 90 90 90 90
		90 90 90 90 90 90 90 90
		90 90 90 90 90 90 90 90
		/INC ECX/
		41
		/INC EDX/
		42
		/**** findAdress de uma linha ****/
		e8 00 00 00 00 58 81 c0 0e 00 00 00
		50
		44 44 44 44
		/JMP EDI/
		/JMP @/
		ff e7
/FIM/
	3b 1a
	74 24
	b9 00 00 00 00
	ff e6
	/NOP .../
	90 90 90 90 90 90 90 90
	90 90 90 90 90 90 90 90
	90 90 90 90 90 90 90 90
	90 90 90 90 90 90 90 90
	90 90 90 90 90 90 90 90
	58 58

	42 42 42 42


	/**** findAdress de uma linha ****/
	e8 00 00 00 00 58 81 c0 0c 00 00 00

	89 10

	61
	9D
	9a 00 00 00 00  08 00
	cb


	/KEY/
	1f 69 5b bf b7 98 f0 5a fa 39 bb b9 d8 07 7a 14
	/ID = 1/
	01 00 00 00
	/********************************************/
	/**************** print_VGA 1 ***************/
	/************** print_VGA 4A4h **************/
	/************* print_VGA* 92A4h *************/
	/********************************************/

	/parametros:	EAX aponta para a string a ser printada/
	/		EBX ou BL atributo/
	/		ESI linha/
	/		EDI coluna/
	9C		/PUSHFD/
	60		/PUSHAD/



	/INICIALIZANDO/
	ba 00 80 0b 00		/mov edx,B8000h/ /Inicio Da regiao do VGA/



	b9 02 00 00 00		/mov ecx,02h/
	0f af f9		/imul edi,ecx/	/Coluna * 2/
						/pq eh necessario pular/
						/os atributos/


	b9 a0 00 00 00		/mov ecx,A0h/
	0f af f1		/imul esi,ecx/ /Linha * 160/


	03 d6			/add edx,esi/ 
	03 d7			/add edx,edi/	/edx aponta para o local correto/


	81 e3 ff 00 00 00	/AND ebx,FFh/ /limpa os outros bytes/


	b9 00 01 00 00		/mov ecx,100h/	/100h = 256/
	0f af d9		/imul ebx,ecx/	/ebx >> 8/

	/volta/
	81 e1 ff 00 00 00	/AND ecx,FFh/ /limpa os outros bytes/
	8a 08			/mov cl,[eax]/
	e3 0c			/jecxz saida/

	8b cb			/mov ecx,ebx/
	8a 08			/mov cl,[eax]/


	66 89 0a		/mov [edx],cx/

	40			/inc eax/
	42			/inc edx/
	42			/inc edx/
	eb ea			/volta/

	/saida/
	61		/POPAD/
	9d		/POPFD/
	cb		/RET/




	/KEY/
	1f 69 5b bf b7 98 f0 5a fa 39 bb b9 d8 07 7a 14
	/ID = 2/
	02 00 00 00
	/********************************************/
	/************** LIMPA_VGA 2 *****************/
	/*********** LIMPA_VGA = 933Dh **************/
	/********************************************/
	/PARAMETROS: EAX = ATRIBUTO/
	9c	/pushfd/
	60	/pushad/

	eb 02
	/4E0 = 92E0/
	20 00

	8b d8		/mov ebx,eax/




	b8 e0 92 00 00	/mov eax," "/


	bf 00 00 00 00
	be 00 00 00 00

	/4f3/


	9a 9A 92 00 00  08 00	/call printa_VGA/


	47

	81 ff D0 07 00 00	/cmp edi,7D0h/

	75 f0			/je ???????/
	/503/

	61
	9d
	cb



	/KEY/
	1f 69 5b bf b7 98 f0 5a fa 39 bb b9 d8 07 7a 14
	/ID = 3/
	03 00 00 00
	/********************************************/
	/********* ALTERA_CURSOR = 506h *************/
	/********************************************/
	/EAX = coluna/
	/EBX = linha/

	9c	/pushfd/
	60	/pushad/


	b9 00 00 00 00		/mov ecx,0h/

	03 c8			/add ecx,eax/


	/ecx ja guardou eax/
	/so falta ebx/
	/primeiro vamos multiplicar por 80 = 50h/

	b8 50 00 00 00		/mov eax,50h/

	/o valor de ebx eh o numero da linha/
	/agora iremos multiplicar por 50h/

	0f af d8		/imul ebx,eax/



	03 cb			/add ecx,ebx/



	/pronto ecx = ebx + eax/



	b0 0f			/MOV al,0fh/
	66 ba d4 03		/MOV dx,3d4h/
	EE			/OUT dx,al/




	8b c1			/mov eax,ecx/ /restaurando o valor/


	/b0 41			//MOV al,BYTE_MAIS_BAIXO/

	66 ba d5 03		/MOV dx,3d5h/
	EE			/OUT dx,al/




	b0 0e			/MOV al,0eh/
	66 ba d4 03		/MOV dx,3d4h/
	EE			/OUT dx,al/


	c1 f9 08		/SAR ecx,8h/
	8b c1			/mov eax,ecx/ /restaurando o valor/




	/b0 00			//MOV al,BYTE_MAIS_ALTO/

	66 ba d5 03		/MOV dx,3d5h/
	EE			/OUT dx,al/


	61			/popad/
	9d			/popfd/
	cb			/retf/






	/KEY/
	1f 69 5b bf b7 98 f0 5a fa 39 bb b9 d8 07 7a 14
	/ID = 4/
	04 00 00 00
	/********************************************/
	/***** Converta_eax_para_String = 545h ******/
	/**** Converta_eax_para_String* = 9345h *****/
	/********************************************/
	/retorna: Converte o Valor de EAX/
	/	na String apontada em 549h/
	/	na String apontada em 9349h/
	/	na String apontada em 53Fh/
	/	na String apontada em 933Fh/
	9c
	60

	eb 09
	/RESULTADO 549/			/'\0'/
	/RESULTADO 53F/
	30 30 30 30  30 30 30 30	00


	b9 08 00 00 00		/mov ecx,8h/


	8b d0			/mov edx,eax/

	81 e2 0f 00 00 00	/and edx,fh/
	81 c2 30 00 00 00	/add edx,30h/
	81 fa 39 00 00 00	/cmp edx,39h/
	76 06			/jna DEPOIS_DESSE_ADD/
	81 c2 07 00 00 00	/add edx,30h/


	88 15 /56Bh//novo = 575h/50 93 00 00	/mov RESULTADO,dl/


	c1 e8 04		/SHR eax,4/


	fe 0d 6b 93 00 00	/DEC  [936Bh]/


	e2 d3			/LOOP/


	/restaurando a instrucao modificada/
	b0 46			/mov al,46h/
	88 05 75 93 00 00	/mov [0x9375],al/
	/restaurando a instrucao modificada/

	61
	9d
	cb


	/frase teste = 585h/

	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20
	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23
	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23
	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20

	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20
	23 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20
	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 23
	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20

	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20
	23 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20
	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 23
	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20

	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20
	23 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20
	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 23
	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20

	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20
	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23
	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23
	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20

	00


	/KEY/
	1f 69 5b bf b7 98 f0 5a fa 39 bb b9 d8 07 7a 14
	/ID = 5/
	05 00 00 00
	/********************************************/
	/************ OBTER TECLA 759h **************/
	/********************************************/
	/Retorna:/
	/[762h] = caracter/
	/EAX = 1 se tudo der certo/
	/EAX = 2 se o mesmo caracter for precionado/
	/EAX = 3 se o caracter nao for printavel/
	/EBX = SCAN CODE/
	9c
	/50/ 51 52 /53/ 54 55 56 57	/push todos menos eax e ebx/
	/ax/	   /bx/


	eb 02
	/762h//caracter/
	00 00
	e9 00 01 00 00		/JMP +100h/
	/769h/
	/	00 01 02 03 04 05 06 07 // 08 09 0a 0b 0c 0d 0e 0f/
	/00/	ff ff 31 32 33 34 35 36 // 37 38 39 30 ff ff ff ff
	/10/	71 77 65 72 74 79 75 69 // 6f 70 ff ff ff ff 61 73
	/20/	64 66 67 68 6a 6b 6c ff // ff ff ff ff 7a 78 63 76
	/30/	62 6e 6d 2c 2e 3b ff ff // ff 20 ff ff ff ff ff ff
	/40/	ff ff ff ff ff ff ff 37 // 38 39 ff 34 35 36 ff 31
	/50/	32 33 30 ff ff ff ff ff // ff ff ff ff ff ff ff ff
	/60/	ff ff ff ff ff ff ff ff // ff ff ff ff ff ff ff ff
	/70/	ff ff ff 2f ff ff ff ff // ff ff ff ff ff ff ff ff
	/80/	ff ff ff ff ff ff ff ff // ff ff ff ff ff ff ff ff
	/90/	ff ff ff ff ff ff ff ff // ff ff ff ff ff ff ff ff
	/a0/	ff ff ff ff ff ff ff ff // ff ff ff ff ff ff ff ff
	/b0/	ff ff ff ff ff ff ff ff // ff ff ff ff ff ff ff ff
	/c0/	ff ff ff ff ff ff ff ff // ff ff ff ff ff ff ff ff
	/d0/	ff ff ff ff ff ff ff ff // ff ff ff ff ff ff ff ff
	/e0/	ff ff ff ff ff ff ff ff // ff ff ff ff ff ff ff ff
	/f0/	ff ff ff ff ff ff ff ff // ff ff ff ff ff ff ff ff

	b8 00 00 00 00		/MOV eax,0/
	e4 60			/IN al,60h/
	8b d8			/MOV ebx,eax/
	b9 69 95 00 00		/MOV ecx, ASCII/
	03 c1			/ADD eax,ecx/
	8a 00			/mov al,[eax]/
	8a 0d 62 95 00 00	/mov cl,[caracter]/

	3a c1			/CMP al,cl/
	75 0d			/JNE Printavel/

	b8 02 00 00 00		/MOV eax,2/
		    /bx/       /ax/
	5f 5e 5d 5c /5b/ 5a 59 /58/	/pop todos menos eax e ebx/
	9d
	cb


	/printavel:/
	80 f8 ff		/CMP al,ffh/
	75 0d			/JNE Tudo_Certo/
	b8 03 00 00 00		/mov eax,3/
		    /bx/       /ax/
	5f 5e 5d 5c /5b/ 5a 59 /58/	/pop todos menos eax e ebx/
	9d
	cb

	88 05 62 95 00 00	/mov [Caracter],al/
	b8 01 00 00 00		/mov eax,1/
		    /bx/       /ax/
	5f 5e 5d 5c /5b/ 5a 59 /58/	/pop todos menos eax e ebx/
	9d
	cb


	/KEY/
	1f 69 5b bf b7 98 f0 5a fa 39 bb b9 d8 07 7a 14
	/ID = 6/
	06 00 00 00
	/********************************************/
	/**************** SHELL 8B7h ****************/
	/********************************************/
	9c
	60


	eb 10
	/gabriel@OS = 8BBh/
	47 61 62 72 69 65 6C 40 4F 53 20 2f 20 23 20 00


	/***************INICIALIZADORES***************/
	b8 bb 96 00 00		/Gabriel@OS/
	bb 70 00 00 00
	bf 00 00 00 00
	be 08 00 00 00
	9a 9A 92 00 00  08 00	/call print_VGA/


	b8 0f 00 00 00
	bb 08 00 00 00
	9a 06 93 00 00  08 00	/call ALTERA_CURSOR/

	b9 0f 00 00 00		/mov ecx,f/	/ecx = linha/
	ba 08 00 00 00		/mov edx,8/	/edx = coluna/
	/***************INICIALIZADORES***************/


	/901h/

	8b c1			/mov eax,ecx/	/mov eax,linha/
	8b da			/mov ebx,edx/	/mov ebx,coluna/
	9a 06 93 00 00  08 00	/call ALTERA_CURSOR/




	9a 59 95 00 00 08 00	/call OBTER TECLA/
	81 fb 1c 00 00 00	/PRECIONA ENTER/
	75 07
	9a 71 97 00 00  08 00	/call Execut/
	/**************** Execut 971h ***************/
	/9a 4A 97 00 00  08 00/	/call print_eax/


	81 f8 01 00 00 00	/CMP eax,1/
	75 db			/Volta OBTER TECLA/


	b8 62 95 00 00		/caracter/
	bb 70 00 00 00

	8b f9			/mov edi,ecx/	/mov edi,linha/
	8b f2			/mov esi,edx/	/mov esi,coluna/

	9a 9A 92 00 00  08 00	/call print_VGA/

	41

	/971h/
	ea 01 97 00 00	08 00


	61
	9d
	cb



	/KEY/
	1f 69 5b bf b7 98 f0 5a fa 39 bb b9 d8 07 7a 14
	/ID = 7/
	07 00 00 00
	/********************************************/
	/**************** PRINT_EAX 94Ah ************/
	/********************************************/
	9c
	60

	9a 3b 93 00 00  08 00

	b8 3f 93 00 00	/eax = string/
	bb 70 00 00 00	/atributo/
	be 00 00 00 00	/esi = 0/
	bf 00 00 00 00	/edi = 0/
	9a 9A 92 00 00  08 00	/call print_VGA/

	61
	9d
	cb



	/KEY/
	1f 69 5b bf b7 98 f0 5a fa 39 bb b9 d8 07 7a 14
	/ID = 8/
	08 00 00 00
	/********************************************/
	/**************** Execut 971h ***************/
	/********************************************/
	9c
	50

	8b c6
	9a 4a 97 00 00  08 00
	/**************** PRINT_EAX 94Ah ************/
	46
	bf 00 00 00 00

	b8 bb 96 00 00		/Gabriel@OS/
	bb 70 00 00 00

	9a 9A 92 00 00  08 00	/call print_VGA/


	b8 0f 00 00 00
	9a 06 93 00 00  08 00	/call ALTERA_CURSOR/


	58
	9d
	cb



	/********************************************/
	/**************** Funcao 55 *****************/
	/********************************************/
	/KEY/
	1f 69 5b bf b7 98 f0 5a fa 39 bb b9 d8 07 7a 14
	/ID = 55/
	55 00 00 00
	9c
	60
		/mov ecx,B8000h/
		/Inicio Da regiao do VGA/

		bb 00 80 0b 00
		b8 20 71 32 71
		89 01

		b9 00 00 00 00
		49 49 49 49
		/**** findAdress de uma linha ****/
		e8 00 00 00 00 58 81 c0 07 00 00 00
		41 41 41 41
		bb 00 80 0b 00
		03 d9
		ba 30 47 31 57
		89 13
		81 f9 B0 0F 00 00
		74 16
		ff e0
		90 90 90 90 90 90 90 90 90
		90 90 90 90 90 90 90 90 90
		90 90 90 90 90 90 90 90 90
		90 90 90 90 90 90 90 90 90
		90 90 90 90 90 90 90 90 90
		90 90 90 90 90 90 90 90 90

	61
	9d
	cb

	/00 01 02 03 04 05 06 07     08 09 0a 0b 0c 0d 0e 0f/

/00/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/10/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/20/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/30/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/40/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/50/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/60/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/70/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/80/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/90/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/a0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/b0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/c0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/d0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/e0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/f0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90

	/00 01 02 03 04 05 06 07     08 09 0a 0b 0c 0d 0e 0f/

/00/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/10/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/20/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/30/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/40/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/50/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/60/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/70/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/80/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/90/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/a0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/b0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/c0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/d0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/e0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/f0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90

	/00 01 02 03 04 05 06 07     08 09 0a 0b 0c 0d 0e 0f/

/00/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/10/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/20/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/30/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/40/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/50/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/60/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/70/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/80/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/90/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/a0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/b0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/c0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/d0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/e0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90
/f0/	90 90 90 90 90 90 90 90 /~/ 90 90 90 90 90 90 90 90


	/KERNEL ID 0/
	/KEY/
	1f 69 5b bf b7 98 f0 5a fa 39 bb b9 d8 07 7a 14
	/ID = 0/
	00 00 00 00
/add Kernel.gex/
